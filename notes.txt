3/1/24
Each user can only add one deck of name X
(Another user could have a deck named X)
Given username Y, if deckname X exists already on a card:
    Non-mvp: alert "do you want to add to a preexisting deck?"
    MVP: error message: deck already exists

Backend Option:
In a schema with DeckId, DeckId+UserId combo would be unique (decks_users junction table)
    DeckId is a PK increasing
    UserId is an FK but part of the primary key
    -Backends might be built by someone different from the person who designs the frontend, so this is how you establish what the back end will/can do

In current schema:
    We can't prevent adding multiple cards with the same deckname because that defeats the purpose of a deck

Frontend Option:
    When submitting, check if deck already exists for user then prevent submitting if yes

---Not present: ---
-all test files, including test section of flashcards.sql
-Procfile because it's specific to Heroku

In process:

-restart AB computer reseed
-look at card schema
-look at cards routes


next:


--QUESTIONS---

USER MODEL: decide whether we want to find cards via card model or user model 
-is the finding cards at line 100ish correct?
    -how does this return the whole object for ea. card?-
    -

CARD SCHEMA
-and frankly user schema: what's with the id
-cardUpdate: made required an empty array on this one and also cardSearch


--ANSWERS---

-how to run the seed file:
----while in the directory: open psql and then, \i flashcards.sql
---don't forget our semicolons (syntax error)
---FKs in the schema do'nt need to be FOREIGN KEY, just use the keyword REFERENCES

--nodemon to keep server restarting when changes occur; new start script in package.json

--token decoder: base64decode.org

--sql queries for the card routes - single quotes around the values passed in while searching